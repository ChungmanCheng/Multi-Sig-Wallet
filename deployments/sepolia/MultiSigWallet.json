{
  "address": "0x2015732C8DB28E8AD72EF60EA5CaF1658956ada3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_numConfirmationsRequired",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "ConfirmERC20Transaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "ConfirmTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "DepositERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "ExecuteERC20Transaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "ExecuteTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "RevokeConfirmation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "RevokeERC20Confirmation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "SubmitERC20Transaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "SubmitTransaction",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "confirmERC20Transaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "confirmTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "executeERC20Transaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "getERC20Transaction",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "numConfirmations",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "getTransaction",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "numConfirmations",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isConfirmed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isERC20Confirmed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "revokeConfirmation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "revokeERC20Confirmation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "submitERC20Transaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "submitTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0f27d0f9e7a329ab8048c78e8a11a7c9f4795e81f90e52bffdf9751368b71c02",
  "receipt": {
    "to": null,
    "from": "0x32855B4d7ab25A35Dd59C1DA2c39783451625594",
    "contractAddress": "0x2015732C8DB28E8AD72EF60EA5CaF1658956ada3",
    "transactionIndex": 29,
    "gasUsed": "1649135",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x92abbb46df47143d150855c74ef58ba1717848136bec058a967f651aa564e636",
    "transactionHash": "0x0f27d0f9e7a329ab8048c78e8a11a7c9f4795e81f90e52bffdf9751368b71c02",
    "logs": [],
    "blockNumber": 4247091,
    "cumulativeGasUsed": "6693122",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x32855B4d7ab25A35Dd59C1DA2c39783451625594",
      "0xA77b98D26584f52c4aD6d6b0d49e04C5059FFe88"
    ],
    2
  ],
  "numDeployments": 5,
  "solcInputHash": "f330b517d47e2e53c204d69ff7051de9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_numConfirmationsRequired\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ConfirmERC20Transaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ConfirmTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"DepositERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ExecuteERC20Transaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ExecuteTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"RevokeConfirmation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"RevokeERC20Confirmation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"SubmitERC20Transaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"SubmitTransaction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"confirmERC20Transaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"confirmTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"executeERC20Transaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"getERC20Transaction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"getTransaction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isERC20Confirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"revokeConfirmation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"revokeERC20Confirmation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"submitERC20Transaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"submitTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultiSigWallet.sol\":\"MultiSigWallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/MultiSigWallet.sol\":{\"content\":\"\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract MultiSigWallet {\\n    event Deposit(address indexed sender, uint amount, uint balance);\\n    event SubmitTransaction(\\n        address indexed owner,\\n        uint indexed txIndex,\\n        address indexed to,\\n        uint value,\\n        bytes data\\n    );\\n    event ConfirmTransaction(address indexed owner, uint indexed txIndex);\\n    event RevokeConfirmation(address indexed owner, uint indexed txIndex);\\n    event ExecuteTransaction(address indexed owner, uint indexed txIndex);\\n\\n    event DepositERC20(\\n        address minter, \\n        address indexed sender, \\n        uint amount, \\n        uint balance\\n        );\\n    event SubmitERC20Transaction(\\n        address minter,\\n        address indexed owner,\\n        uint indexed txIndex,\\n        address indexed to,\\n        uint value,\\n        bytes data\\n    );\\n    event ConfirmERC20Transaction(\\n        address minter,\\n        address indexed owner, \\n        uint indexed txIndex\\n    );\\n    event RevokeERC20Confirmation(\\n        address minter,\\n        address indexed owner, \\n        uint indexed txIndex\\n    );\\n    event ExecuteERC20Transaction(\\n        address minter,\\n        address indexed owner, \\n        uint indexed txIndex\\n    );\\n\\n    address[] owners;\\n    mapping(address => bool) public isOwner;\\n    uint numConfirmationsRequired;\\n\\n    struct Transaction {\\n        address to;\\n        uint value;\\n        bytes data;\\n        bool executed;\\n        uint numConfirmations;\\n    }\\n\\n    struct ERC20Transaction{\\n        address erc20minter;\\n        address to;\\n        uint value;\\n        bytes data;\\n        bool executed;\\n        uint numConfirmations;\\n    }\\n\\n    // mapping from tx index => owner => bool\\n    mapping(uint => mapping(address => bool)) public isConfirmed;\\n    mapping(uint => mapping(address => bool)) public isERC20Confirmed;\\n\\n    Transaction[] transactions;\\n    ERC20Transaction[] erc20transactions;\\n\\n    modifier onlyOwner() {\\n        require(isOwner[msg.sender], \\\"not owner\\\");\\n        _;\\n    }\\n\\n    modifier txExists(uint _txIndex) {\\n        require(_txIndex < transactions.length, \\\"tx does not exist\\\");\\n        _;\\n    }\\n\\n    modifier notExecuted(uint _txIndex) {\\n        require(!transactions[_txIndex].executed, \\\"tx already executed\\\");\\n        _;\\n    }\\n\\n    modifier notConfirmed(uint _txIndex) {\\n        require(!isConfirmed[_txIndex][msg.sender], \\\"tx already confirmed\\\");\\n        _;\\n    }\\n\\n    modifier ERC20txExists(uint _txIndex) {\\n        require(_txIndex < erc20transactions.length, \\\"tx does not exist\\\");\\n        _;\\n    }\\n\\n    modifier ERC20notExecuted(uint _txIndex) {\\n        require(!erc20transactions[_txIndex].executed, \\\"tx already executed\\\");\\n        _;\\n    }\\n\\n    modifier ERC20notConfirmed(uint _txIndex) {\\n        require(!isERC20Confirmed[_txIndex][msg.sender], \\\"tx already confirmed\\\");\\n        _;\\n    }\\n\\n    constructor(address[] memory _owners, uint _numConfirmationsRequired) {\\n        require(_owners.length > 0, \\\"owners required\\\");\\n        require(\\n            _numConfirmationsRequired > 0 &&\\n                _numConfirmationsRequired <= _owners.length,\\n            \\\"invalid number of required confirmations\\\"\\n        );\\n\\n        for (uint i = 0; i < _owners.length; i++) {\\n            address owner = _owners[i];\\n\\n            require(owner != address(0), \\\"invalid owner\\\");\\n            require(!isOwner[owner], \\\"owner not unique\\\");\\n\\n            isOwner[owner] = true;\\n            owners.push(owner);\\n        }\\n\\n        numConfirmationsRequired = _numConfirmationsRequired;\\n    }\\n\\n    receive() external payable {\\n        emit Deposit(msg.sender, msg.value, address(this).balance);\\n    }\\n\\n    function submitTransaction(\\n        address _to,\\n        uint _value,\\n        bytes memory _data\\n    ) public onlyOwner {\\n        uint txIndex = transactions.length;\\n\\n        transactions.push(\\n            Transaction({\\n                to: _to,\\n                value: _value,\\n                data: _data,\\n                executed: false,\\n                numConfirmations: 0\\n            })\\n        );\\n\\n        emit SubmitTransaction(msg.sender, txIndex, _to, _value, _data);\\n    }\\n\\n    function confirmTransaction(\\n        uint _txIndex\\n    ) public onlyOwner txExists(_txIndex) notExecuted(_txIndex) notConfirmed(_txIndex) {\\n        Transaction storage transaction = transactions[_txIndex];\\n        transaction.numConfirmations += 1;\\n        isConfirmed[_txIndex][msg.sender] = true;\\n\\n        emit ConfirmTransaction(msg.sender, _txIndex);\\n    }\\n\\n    function executeTransaction(\\n        uint _txIndex\\n    ) public onlyOwner txExists(_txIndex) notExecuted(_txIndex) {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        require(\\n            transaction.numConfirmations >= numConfirmationsRequired,\\n            \\\"cannot execute tx\\\"\\n        );\\n\\n        transaction.executed = true;\\n\\n        (bool success, ) = transaction.to.call{value: transaction.value}(\\n            transaction.data\\n        );\\n        require(success, \\\"tx failed\\\");\\n\\n        emit ExecuteTransaction(msg.sender, _txIndex);\\n    }\\n\\n    function revokeConfirmation(\\n        uint _txIndex\\n    ) public onlyOwner txExists(_txIndex) notExecuted(_txIndex) {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        require(isConfirmed[_txIndex][msg.sender], \\\"tx not confirmed\\\");\\n\\n        transaction.numConfirmations -= 1;\\n        isConfirmed[_txIndex][msg.sender] = false;\\n\\n        emit RevokeConfirmation(msg.sender, _txIndex);\\n    }\\n\\n    function getOwners() public view returns (address[] memory) {\\n        return owners;\\n    }\\n\\n    function getContractAddress() public view returns (address) {\\n        return address(this);\\n    }\\n\\n    function getTransactionCount() public view returns (uint) {\\n        return transactions.length;\\n    }\\n\\n    function getTransaction(\\n        uint _txIndex\\n    ) public view\\n        returns (\\n            address to,\\n            uint value,\\n            bytes memory data,\\n            bool executed,\\n            uint numConfirmations\\n        )\\n    {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        return (\\n            transaction.to,\\n            transaction.value,\\n            transaction.data,\\n            transaction.executed,\\n            transaction.numConfirmations\\n        );\\n    }\\n\\n    function submitERC20Transaction(\\n        address _minter,\\n        address _to,\\n        uint _value,\\n        bytes memory _data\\n    ) public onlyOwner {\\n        uint txIndex = erc20transactions.length;\\n\\n        erc20transactions.push(\\n            ERC20Transaction({\\n                erc20minter: _minter,\\n                to: _to,\\n                value: _value,\\n                data: _data,\\n                executed: false,\\n                numConfirmations: 0\\n            })\\n        );\\n\\n        emit SubmitERC20Transaction(\\n            _minter,\\n            msg.sender, \\n            txIndex, \\n            _to, \\n            _value, \\n            _data\\n        );\\n    }\\n\\n    function confirmERC20Transaction(\\n        uint _txIndex\\n    ) public onlyOwner ERC20txExists(_txIndex) ERC20notExecuted(_txIndex) ERC20notConfirmed(_txIndex) {\\n        ERC20Transaction storage transaction = erc20transactions[_txIndex];\\n        transaction.numConfirmations += 1;\\n        isConfirmed[_txIndex][msg.sender] = true;\\n\\n        emit ConfirmERC20Transaction(\\n            transaction.erc20minter,\\n            msg.sender,\\n            _txIndex\\n        );\\n    }\\n\\n    function executeERC20Transaction(\\n        uint _txIndex\\n    ) public onlyOwner ERC20txExists(_txIndex) ERC20notExecuted(_txIndex) {\\n        ERC20Transaction storage transaction = erc20transactions[_txIndex];\\n\\n        require(\\n            transaction.numConfirmations >= numConfirmationsRequired,\\n            \\\"cannot execute tx\\\"\\n        );\\n\\n        transaction.executed = true;\\n\\n        ERC20(transaction.erc20minter).transfer(transaction.to, transaction.value);\\n\\n        emit ExecuteERC20Transaction(\\n            transaction.erc20minter,\\n            msg.sender, \\n            _txIndex\\n        );\\n    }\\n\\n    function revokeERC20Confirmation(\\n        uint _txIndex\\n    ) public onlyOwner ERC20txExists(_txIndex) ERC20notExecuted(_txIndex) {\\n        ERC20Transaction storage transaction = erc20transactions[_txIndex];\\n\\n        require(isConfirmed[_txIndex][msg.sender], \\\"tx not confirmed\\\");\\n\\n        transaction.numConfirmations -= 1;\\n        isConfirmed[_txIndex][msg.sender] = false;\\n\\n        emit RevokeERC20Confirmation(\\n            transaction.erc20minter,\\n            msg.sender, \\n            _txIndex\\n        );\\n    }\\n\\n    function getERC20Transaction(\\n        uint _txIndex\\n    ) public view\\n        returns (\\n            address minter,\\n            address to,\\n            uint value,\\n            bytes memory data,\\n            bool executed,\\n            uint numConfirmations\\n        )\\n    {\\n        ERC20Transaction storage transaction = erc20transactions[_txIndex];\\n\\n        return (\\n            transaction.erc20minter,\\n            transaction.to,\\n            transaction.value,\\n            transaction.data,\\n            transaction.executed,\\n            transaction.numConfirmations\\n        );\\n    }\\n\\n}\\n\",\"keccak256\":\"0xcbd97e24bb68ba20d77e1a293598c739a64ed874d1012e853c3c6d2da6ccf708\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001dc838038062001dc8833981016040819052620000349162000278565b60008251116200007d5760405162461bcd60e51b815260206004820152600f60248201526e1bdddb995c9cc81c995c5d5a5c9959608a1b60448201526064015b60405180910390fd5b6000811180156200008f575081518111155b620000ee5760405162461bcd60e51b815260206004820152602860248201527f696e76616c6964206e756d626572206f6620726571756972656420636f6e6669604482015267726d6174696f6e7360c01b606482015260840162000074565b60005b8251811015620002505760008382815181106200011e57634e487b7160e01b600052603260045260246000fd5b6020026020010151905060006001600160a01b0316816001600160a01b031614156200017d5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b604482015260640162000074565b6001600160a01b03811660009081526001602052604090205460ff1615620001db5760405162461bcd60e51b815260206004820152601060248201526f6f776e6572206e6f7420756e6971756560801b604482015260640162000074565b6001600160a01b031660008181526001602081905260408220805460ff191682179055815490810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b031916909117905580620002478162000354565b915050620000f1565b506002555062000392565b80516001600160a01b03811681146200027357600080fd5b919050565b600080604083850312156200028b578182fd5b82516001600160401b0380821115620002a2578384fd5b818501915085601f830112620002b6578384fd5b8151602082821115620002cd57620002cd6200037c565b8160051b604051601f19603f83011681018181108682111715620002f557620002f56200037c565b604052838152828101945085830182870184018b101562000314578889fd5b8896505b8487101562000341576200032c816200025b565b86526001969096019594830194830162000318565b5097909101519698969750505050505050565b60006000198214156200037557634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b611a2680620003a26000396000f3fe6080604052600436106100f75760003560e01c80634f54fc1a1161008a578063c01a8c8411610059578063c01a8c8414610338578063c642747414610358578063e1cd542814610378578063ee22610b1461039857600080fd5b80634f54fc1a1461028957806370954b2c146102bb57806380f59a65146102db578063a0e67e2b1461031657600080fd5b80632f54bf6e116100c65780632f54bf6e146101ed57806332a2c5d01461021d57806333ea3dc8146102385780634159af4c1461026957600080fd5b8063098572301461013d5780630d1fd39c1461015f57806320ea8d86146101af5780632e7700f0146101cf57600080fd5b36610138576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b34801561014957600080fd5b5061015d6101583660046115ba565b6103b8565b005b34801561016b57600080fd5b5061019a61017a3660046116ad565b600460209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b3480156101bb57600080fd5b5061015d6101ca366004611695565b610581565b3480156101db57600080fd5b506005546040519081526020016101a6565b3480156101f957600080fd5b5061019a610208366004611599565b60016020526000908152604090205460ff1681565b34801561022957600080fd5b506040513081526020016101a6565b34801561024457600080fd5b50610258610253366004611695565b61071f565b6040516101a6959493929190611836565b34801561027557600080fd5b5061015d610284366004611695565b610828565b34801561029557600080fd5b506102a96102a4366004611695565b610a37565b6040516101a6969594939291906117be565b3480156102c757600080fd5b5061015d6102d6366004611695565b610b4d565b3480156102e757600080fd5b5061019a6102f63660046116ad565b600360209081526000928352604080842090915290825290205460ff1681565b34801561032257600080fd5b5061032b610cfd565b6040516101a69190611871565b34801561034457600080fd5b5061015d610353366004611695565b610d5f565b34801561036457600080fd5b5061015d610373366004611620565b610f09565b34801561038457600080fd5b5061015d610393366004611695565b611089565b3480156103a457600080fd5b5061015d6103b3366004611695565b61124e565b3360009081526001602052604090205460ff166103f05760405162461bcd60e51b81526004016103e790611916565b60405180910390fd5b600680546040805160c0810182526001600160a01b03808916825287811660208084019182529383018881526060840188815260006080860181905260a0860181905260018801895588905284519787027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810180549986166001600160a01b03199a8b1617815593517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d408201805491909616991698909817909355517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d418701559051805194959294919361050a937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42019291019061145d565b50608082015160048201805460ff191691151591909117905560a0909101516005909101556040516001600160a01b03851690829033907fb299916e60983bab92cf53e9661095105b8cae1119e0d7dfea9f3fe28cb983f590610572908a9089908990611806565b60405180910390a45050505050565b3360009081526001602052604090205460ff166105b05760405162461bcd60e51b81526004016103e790611916565b600554819081106105d35760405162461bcd60e51b81526004016103e7906118be565b81600581815481106105f557634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff16156106295760405162461bcd60e51b81526004016103e7906118e9565b60006005848154811061064c57634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526003825260408085203386529092529220546005909102909101915060ff166106b75760405162461bcd60e51b815260206004820152601060248201526f1d1e081b9bdd0818dbdb999a5c9b595960821b60448201526064016103e7565b60018160040160008282546106cc9190611972565b90915550506000848152600360209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b600080606060008060006005878154811061074a57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060059091020180546001820154600383015460048401546002850180549596506001600160a01b039094169492939260ff90921691839061079490611989565b80601f01602080910402602001604051908101604052809291908181526020018280546107c090611989565b801561080d5780601f106107e25761010080835404028352916020019161080d565b820191906000526020600020905b8154815290600101906020018083116107f057829003601f168201915b50505050509250955095509550955095505091939590929450565b3360009081526001602052604090205460ff166108575760405162461bcd60e51b81526004016103e790611916565b6006548190811061087a5760405162461bcd60e51b81526004016103e7906118be565b816006818154811061089c57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff16156108d05760405162461bcd60e51b81526004016103e7906118e9565b6000600684815481106108f357634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020190506002548160050154101561094d5760405162461bcd60e51b81526020600482015260116024820152700c6c2dcdcdee840caf0cac6eae8ca40e8f607b1b60448201526064016103e7565b6004818101805460ff19166001908117909155825490830154600284015460405163a9059cbb60e01b81526001600160a01b03928316948101949094526024840152169063a9059cbb90604401602060405180830381600087803b1580156109b457600080fd5b505af11580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec9190611675565b5080546040516001600160a01b039091168152849033907f0d100ba4b5a27769826a51f3d2407eec21626da502a7d34c9d2a4ffc5e3fd2aa906020015b60405180910390a350505050565b60008060006060600080600060068881548110610a6457634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201805460018201546002830154600484015460058501546003860180549697506001600160a01b03958616969490951694929360ff909216918390610ab790611989565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae390611989565b8015610b305780601f10610b0557610100808354040283529160200191610b30565b820191906000526020600020905b815481529060010190602001808311610b1357829003601f168201915b505050505092509650965096509650965096505091939550919395565b3360009081526001602052604090205460ff16610b7c5760405162461bcd60e51b81526004016103e790611916565b60065481908110610b9f5760405162461bcd60e51b81526004016103e7906118be565b8160068181548110610bc157634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff1615610bf55760405162461bcd60e51b81526004016103e7906118e9565b600060068481548110610c1857634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526003825260408085203386529092529220546006909102909101915060ff16610c835760405162461bcd60e51b815260206004820152601060248201526f1d1e081b9bdd0818dbdb999a5c9b595960821b60448201526064016103e7565b6001816005016000828254610c989190611972565b909155505060008481526003602090815260408083203380855290835292819020805460ff19169055835490516001600160a01b0390911681528692917f7714a14bd201a6bbf6c0208fd1d941b726ba4bdb4b2854f13ce1cfe1930c3d629101610a29565b60606000805480602002602001604051908101604052809291908181526020018280548015610d5557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d37575b5050505050905090565b3360009081526001602052604090205460ff16610d8e5760405162461bcd60e51b81526004016103e790611916565b60055481908110610db15760405162461bcd60e51b81526004016103e7906118be565b8160058181548110610dd357634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff1615610e075760405162461bcd60e51b81526004016103e7906118e9565b6000838152600360209081526040808320338452909152902054839060ff1615610e6a5760405162461bcd60e51b81526020600482015260146024820152731d1e08185b1c9958591e4818dbdb999a5c9b595960621b60448201526064016103e7565b600060058581548110610e8d57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020190506001816004016000828254610eb2919061195a565b90915550506000858152600360209081526040808320338085529252808320805460ff191660011790555187927f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004191a35050505050565b3360009081526001602052604090205460ff16610f385760405162461bcd60e51b81526004016103e790611916565b600580546040805160a0810182526001600160a01b03878116825260208083018881529383018781526000606085018190526080850181905260018701885587905283517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db097870297880180546001600160a01b0319169190941617835593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db187015592518051949592949193611015937f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2019291019061145d565b50606082015160038201805460ff19169115159190911790556080909101516004909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d9061107b9088908890611939565b60405180910390a450505050565b3360009081526001602052604090205460ff166110b85760405162461bcd60e51b81526004016103e790611916565b600654819081106110db5760405162461bcd60e51b81526004016103e7906118be565b81600681815481106110fd57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff16156111315760405162461bcd60e51b81526004016103e7906118e9565b6000838152600460209081526040808320338452909152902054839060ff16156111945760405162461bcd60e51b81526020600482015260146024820152731d1e08185b1c9958591e4818dbdb999a5c9b595960621b60448201526064016103e7565b6000600685815481106111b757634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201905060018160050160008282546111dc919061195a565b909155505060008581526003602090815260408083203380855290835292819020805460ff19166001179055835490516001600160a01b0390911681528792917f96e2a1e4ef305c8115c6090f179b53d92d4d325ca67c8e54a524a6b694973f9f910160405180910390a35050505050565b3360009081526001602052604090205460ff1661127d5760405162461bcd60e51b81526004016103e790611916565b600554819081106112a05760405162461bcd60e51b81526004016103e7906118be565b81600581815481106112c257634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff16156112f65760405162461bcd60e51b81526004016103e7906118e9565b60006005848154811061131957634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502019050600254816004015410156113735760405162461bcd60e51b81526020600482015260116024820152700c6c2dcdcdee840caf0cac6eae8ca40e8f607b1b60448201526064016103e7565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b031691906113aa906002860190611723565b60006040518083038185875af1925050503d80600081146113e7576040519150601f19603f3d011682016040523d82523d6000602084013e6113ec565b606091505b50509050806114295760405162461bcd60e51b81526020600482015260096024820152681d1e0819985a5b195960ba1b60448201526064016103e7565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b82805461146990611989565b90600052602060002090601f01602090048101928261148b57600085556114d1565b82601f106114a457805160ff19168380011785556114d1565b828001600101855582156114d1579182015b828111156114d15782518255916020019190600101906114b6565b506114dd9291506114e1565b5090565b5b808211156114dd57600081556001016114e2565b80356001600160a01b038116811461150d57600080fd5b919050565b600082601f830112611522578081fd5b813567ffffffffffffffff8082111561153d5761153d6119da565b604051601f8301601f19908116603f01168101908282118183101715611565576115656119da565b8160405283815286602085880101111561157d578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156115aa578081fd5b6115b3826114f6565b9392505050565b600080600080608085870312156115cf578283fd5b6115d8856114f6565b93506115e6602086016114f6565b925060408501359150606085013567ffffffffffffffff811115611608578182fd5b61161487828801611512565b91505092959194509250565b600080600060608486031215611634578283fd5b61163d846114f6565b925060208401359150604084013567ffffffffffffffff81111561165f578182fd5b61166b86828701611512565b9150509250925092565b600060208284031215611686578081fd5b815180151581146115b3578182fd5b6000602082840312156116a6578081fd5b5035919050565b600080604083850312156116bf578182fd5b823591506116cf602084016114f6565b90509250929050565b60008151808452815b818110156116fd576020818501810151868301820152016116e1565b8181111561170e5782602083870101525b50601f01601f19169290920160200192915050565b600080835482600182811c91508083168061173f57607f831692505b602080841082141561175f57634e487b7160e01b87526022600452602487fd5b8180156117735760018114611784576117b0565b60ff198616895284890196506117b0565b60008a815260209020885b868110156117a85781548b82015290850190830161178f565b505084890196505b509498975050505050505050565b6001600160a01b038781168252861660208201526040810185905260c0606082018190526000906117f1908301866116d8565b93151560808301525060a00152949350505050565b60018060a01b038416815282602082015260606040820152600061182d60608301846116d8565b95945050505050565b60018060a01b038616815284602082015260a06040820152600061185d60a08301866116d8565b931515606083015250608001529392505050565b6020808252825182820181905260009190848201906040850190845b818110156118b25783516001600160a01b03168352928401929184019160010161188d565b50909695505050505050565b6020808252601190820152701d1e08191bd95cc81b9bdd08195e1a5cdd607a1b604082015260600190565b6020808252601390820152721d1e08185b1c9958591e48195e1958dd5d1959606a1b604082015260600190565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b82815260406020820152600061195260408301846116d8565b949350505050565b6000821982111561196d5761196d6119c4565b500190565b600082821015611984576119846119c4565b500390565b600181811c9082168061199d57607f821691505b602082108114156119be57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c32843dd360b1c298d531d126c6b967e1964c9bcc664cc13d5a9481d66c1e20864736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100f75760003560e01c80634f54fc1a1161008a578063c01a8c8411610059578063c01a8c8414610338578063c642747414610358578063e1cd542814610378578063ee22610b1461039857600080fd5b80634f54fc1a1461028957806370954b2c146102bb57806380f59a65146102db578063a0e67e2b1461031657600080fd5b80632f54bf6e116100c65780632f54bf6e146101ed57806332a2c5d01461021d57806333ea3dc8146102385780634159af4c1461026957600080fd5b8063098572301461013d5780630d1fd39c1461015f57806320ea8d86146101af5780632e7700f0146101cf57600080fd5b36610138576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b34801561014957600080fd5b5061015d6101583660046115ba565b6103b8565b005b34801561016b57600080fd5b5061019a61017a3660046116ad565b600460209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b3480156101bb57600080fd5b5061015d6101ca366004611695565b610581565b3480156101db57600080fd5b506005546040519081526020016101a6565b3480156101f957600080fd5b5061019a610208366004611599565b60016020526000908152604090205460ff1681565b34801561022957600080fd5b506040513081526020016101a6565b34801561024457600080fd5b50610258610253366004611695565b61071f565b6040516101a6959493929190611836565b34801561027557600080fd5b5061015d610284366004611695565b610828565b34801561029557600080fd5b506102a96102a4366004611695565b610a37565b6040516101a6969594939291906117be565b3480156102c757600080fd5b5061015d6102d6366004611695565b610b4d565b3480156102e757600080fd5b5061019a6102f63660046116ad565b600360209081526000928352604080842090915290825290205460ff1681565b34801561032257600080fd5b5061032b610cfd565b6040516101a69190611871565b34801561034457600080fd5b5061015d610353366004611695565b610d5f565b34801561036457600080fd5b5061015d610373366004611620565b610f09565b34801561038457600080fd5b5061015d610393366004611695565b611089565b3480156103a457600080fd5b5061015d6103b3366004611695565b61124e565b3360009081526001602052604090205460ff166103f05760405162461bcd60e51b81526004016103e790611916565b60405180910390fd5b600680546040805160c0810182526001600160a01b03808916825287811660208084019182529383018881526060840188815260006080860181905260a0860181905260018801895588905284519787027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810180549986166001600160a01b03199a8b1617815593517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d408201805491909616991698909817909355517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d418701559051805194959294919361050a937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42019291019061145d565b50608082015160048201805460ff191691151591909117905560a0909101516005909101556040516001600160a01b03851690829033907fb299916e60983bab92cf53e9661095105b8cae1119e0d7dfea9f3fe28cb983f590610572908a9089908990611806565b60405180910390a45050505050565b3360009081526001602052604090205460ff166105b05760405162461bcd60e51b81526004016103e790611916565b600554819081106105d35760405162461bcd60e51b81526004016103e7906118be565b81600581815481106105f557634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff16156106295760405162461bcd60e51b81526004016103e7906118e9565b60006005848154811061064c57634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526003825260408085203386529092529220546005909102909101915060ff166106b75760405162461bcd60e51b815260206004820152601060248201526f1d1e081b9bdd0818dbdb999a5c9b595960821b60448201526064016103e7565b60018160040160008282546106cc9190611972565b90915550506000848152600360209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b600080606060008060006005878154811061074a57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060059091020180546001820154600383015460048401546002850180549596506001600160a01b039094169492939260ff90921691839061079490611989565b80601f01602080910402602001604051908101604052809291908181526020018280546107c090611989565b801561080d5780601f106107e25761010080835404028352916020019161080d565b820191906000526020600020905b8154815290600101906020018083116107f057829003601f168201915b50505050509250955095509550955095505091939590929450565b3360009081526001602052604090205460ff166108575760405162461bcd60e51b81526004016103e790611916565b6006548190811061087a5760405162461bcd60e51b81526004016103e7906118be565b816006818154811061089c57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff16156108d05760405162461bcd60e51b81526004016103e7906118e9565b6000600684815481106108f357634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020190506002548160050154101561094d5760405162461bcd60e51b81526020600482015260116024820152700c6c2dcdcdee840caf0cac6eae8ca40e8f607b1b60448201526064016103e7565b6004818101805460ff19166001908117909155825490830154600284015460405163a9059cbb60e01b81526001600160a01b03928316948101949094526024840152169063a9059cbb90604401602060405180830381600087803b1580156109b457600080fd5b505af11580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec9190611675565b5080546040516001600160a01b039091168152849033907f0d100ba4b5a27769826a51f3d2407eec21626da502a7d34c9d2a4ffc5e3fd2aa906020015b60405180910390a350505050565b60008060006060600080600060068881548110610a6457634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201805460018201546002830154600484015460058501546003860180549697506001600160a01b03958616969490951694929360ff909216918390610ab790611989565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae390611989565b8015610b305780601f10610b0557610100808354040283529160200191610b30565b820191906000526020600020905b815481529060010190602001808311610b1357829003601f168201915b505050505092509650965096509650965096505091939550919395565b3360009081526001602052604090205460ff16610b7c5760405162461bcd60e51b81526004016103e790611916565b60065481908110610b9f5760405162461bcd60e51b81526004016103e7906118be565b8160068181548110610bc157634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff1615610bf55760405162461bcd60e51b81526004016103e7906118e9565b600060068481548110610c1857634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526003825260408085203386529092529220546006909102909101915060ff16610c835760405162461bcd60e51b815260206004820152601060248201526f1d1e081b9bdd0818dbdb999a5c9b595960821b60448201526064016103e7565b6001816005016000828254610c989190611972565b909155505060008481526003602090815260408083203380855290835292819020805460ff19169055835490516001600160a01b0390911681528692917f7714a14bd201a6bbf6c0208fd1d941b726ba4bdb4b2854f13ce1cfe1930c3d629101610a29565b60606000805480602002602001604051908101604052809291908181526020018280548015610d5557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d37575b5050505050905090565b3360009081526001602052604090205460ff16610d8e5760405162461bcd60e51b81526004016103e790611916565b60055481908110610db15760405162461bcd60e51b81526004016103e7906118be565b8160058181548110610dd357634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff1615610e075760405162461bcd60e51b81526004016103e7906118e9565b6000838152600360209081526040808320338452909152902054839060ff1615610e6a5760405162461bcd60e51b81526020600482015260146024820152731d1e08185b1c9958591e4818dbdb999a5c9b595960621b60448201526064016103e7565b600060058581548110610e8d57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020190506001816004016000828254610eb2919061195a565b90915550506000858152600360209081526040808320338085529252808320805460ff191660011790555187927f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004191a35050505050565b3360009081526001602052604090205460ff16610f385760405162461bcd60e51b81526004016103e790611916565b600580546040805160a0810182526001600160a01b03878116825260208083018881529383018781526000606085018190526080850181905260018701885587905283517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db097870297880180546001600160a01b0319169190941617835593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db187015592518051949592949193611015937f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2019291019061145d565b50606082015160038201805460ff19169115159190911790556080909101516004909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d9061107b9088908890611939565b60405180910390a450505050565b3360009081526001602052604090205460ff166110b85760405162461bcd60e51b81526004016103e790611916565b600654819081106110db5760405162461bcd60e51b81526004016103e7906118be565b81600681815481106110fd57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff16156111315760405162461bcd60e51b81526004016103e7906118e9565b6000838152600460209081526040808320338452909152902054839060ff16156111945760405162461bcd60e51b81526020600482015260146024820152731d1e08185b1c9958591e4818dbdb999a5c9b595960621b60448201526064016103e7565b6000600685815481106111b757634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201905060018160050160008282546111dc919061195a565b909155505060008581526003602090815260408083203380855290835292819020805460ff19166001179055835490516001600160a01b0390911681528792917f96e2a1e4ef305c8115c6090f179b53d92d4d325ca67c8e54a524a6b694973f9f910160405180910390a35050505050565b3360009081526001602052604090205460ff1661127d5760405162461bcd60e51b81526004016103e790611916565b600554819081106112a05760405162461bcd60e51b81526004016103e7906118be565b81600581815481106112c257634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff16156112f65760405162461bcd60e51b81526004016103e7906118e9565b60006005848154811061131957634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502019050600254816004015410156113735760405162461bcd60e51b81526020600482015260116024820152700c6c2dcdcdee840caf0cac6eae8ca40e8f607b1b60448201526064016103e7565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b031691906113aa906002860190611723565b60006040518083038185875af1925050503d80600081146113e7576040519150601f19603f3d011682016040523d82523d6000602084013e6113ec565b606091505b50509050806114295760405162461bcd60e51b81526020600482015260096024820152681d1e0819985a5b195960ba1b60448201526064016103e7565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b82805461146990611989565b90600052602060002090601f01602090048101928261148b57600085556114d1565b82601f106114a457805160ff19168380011785556114d1565b828001600101855582156114d1579182015b828111156114d15782518255916020019190600101906114b6565b506114dd9291506114e1565b5090565b5b808211156114dd57600081556001016114e2565b80356001600160a01b038116811461150d57600080fd5b919050565b600082601f830112611522578081fd5b813567ffffffffffffffff8082111561153d5761153d6119da565b604051601f8301601f19908116603f01168101908282118183101715611565576115656119da565b8160405283815286602085880101111561157d578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156115aa578081fd5b6115b3826114f6565b9392505050565b600080600080608085870312156115cf578283fd5b6115d8856114f6565b93506115e6602086016114f6565b925060408501359150606085013567ffffffffffffffff811115611608578182fd5b61161487828801611512565b91505092959194509250565b600080600060608486031215611634578283fd5b61163d846114f6565b925060208401359150604084013567ffffffffffffffff81111561165f578182fd5b61166b86828701611512565b9150509250925092565b600060208284031215611686578081fd5b815180151581146115b3578182fd5b6000602082840312156116a6578081fd5b5035919050565b600080604083850312156116bf578182fd5b823591506116cf602084016114f6565b90509250929050565b60008151808452815b818110156116fd576020818501810151868301820152016116e1565b8181111561170e5782602083870101525b50601f01601f19169290920160200192915050565b600080835482600182811c91508083168061173f57607f831692505b602080841082141561175f57634e487b7160e01b87526022600452602487fd5b8180156117735760018114611784576117b0565b60ff198616895284890196506117b0565b60008a815260209020885b868110156117a85781548b82015290850190830161178f565b505084890196505b509498975050505050505050565b6001600160a01b038781168252861660208201526040810185905260c0606082018190526000906117f1908301866116d8565b93151560808301525060a00152949350505050565b60018060a01b038416815282602082015260606040820152600061182d60608301846116d8565b95945050505050565b60018060a01b038616815284602082015260a06040820152600061185d60a08301866116d8565b931515606083015250608001529392505050565b6020808252825182820181905260009190848201906040850190845b818110156118b25783516001600160a01b03168352928401929184019160010161188d565b50909695505050505050565b6020808252601190820152701d1e08191bd95cc81b9bdd08195e1a5cdd607a1b604082015260600190565b6020808252601390820152721d1e08185b1c9958591e48195e1958dd5d1959606a1b604082015260600190565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b82815260406020820152600061195260408301846116d8565b949350505050565b6000821982111561196d5761196d6119c4565b500190565b600082821015611984576119846119c4565b500390565b600181811c9082168061199d57607f821691505b602082108114156119be57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c32843dd360b1c298d531d126c6b967e1964c9bcc664cc13d5a9481d66c1e20864736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 803,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "owners",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 807,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "isOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 809,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "numConfirmationsRequired",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 839,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "isConfirmed",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 845,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "isERC20Confirmed",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 849,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "transactions",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_struct(Transaction)820_storage)dyn_storage"
      },
      {
        "astId": 853,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "erc20transactions",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_struct(ERC20Transaction)833_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(ERC20Transaction)833_storage)dyn_storage": {
        "base": "t_struct(ERC20Transaction)833_storage",
        "encoding": "dynamic_array",
        "label": "struct MultiSigWallet.ERC20Transaction[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Transaction)820_storage)dyn_storage": {
        "base": "t_struct(Transaction)820_storage",
        "encoding": "dynamic_array",
        "label": "struct MultiSigWallet.Transaction[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_struct(ERC20Transaction)833_storage": {
        "encoding": "inplace",
        "label": "struct MultiSigWallet.ERC20Transaction",
        "members": [
          {
            "astId": 822,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "erc20minter",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 824,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "to",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 826,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "value",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 828,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "data",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes_storage"
          },
          {
            "astId": 830,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "executed",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 832,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "numConfirmations",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Transaction)820_storage": {
        "encoding": "inplace",
        "label": "struct MultiSigWallet.Transaction",
        "members": [
          {
            "astId": 811,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "to",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 813,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "value",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 815,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "data",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          },
          {
            "astId": 817,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "executed",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 819,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "numConfirmations",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}